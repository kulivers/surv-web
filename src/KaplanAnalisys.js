import {Container, Paper} from "@mui/material";
import Typography from "@material-ui/core/Typography";
import Button from "@mui/material/Button";
import {ChartSection} from "./ChartSection";
import React, {useState} from 'react'
import {makeStyles} from "@material-ui/core/styles";
import {FieldFilter} from "./FilterFields";
import axios from "axios";


const useStyles = makeStyles((theme) => ({
    title: {
        flexGrow: 1,
        [theme.breakpoints.up("sm")]: {
            fontSize: "1.7rem",
        },
        [theme.breakpoints.down("xs")]: {
            fontSize: "1.3rem",
        },
    },
    chartSection: {
        display: "flex",
        flexDirection: "column",
        alignItems: 'center',
        justifyContent: 'center'
    }
}));
const formChartDataFromResponse = (data) => {
    data = {
        "y": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.9906542056074769,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9813084112149534,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9687275341480953,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9504496561453011,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685,
            0.9266884147416685
        ],
        "x": [
            0.0,
            64.0,
            104.0,
            134.0,
            143.0,
            145.0,
            154.0,
            160.0,
            175.0,
            186.0,
            190.0,
            197.0,
            202.0,
            203.0,
            204.0,
            213.0,
            216.0,
            218.0,
            221.0,
            222.0,
            232.0,
            238.0,
            240.0,
            241.0,
            244.0,
            246.0,
            252.0,
            258.0,
            262.0,
            263.0,
            264.0,
            269.0,
            271.0,
            278.0,
            281.0,
            282.0,
            287.0,
            289.0,
            290.0,
            293.0,
            297.0,
            307.0,
            308.0,
            309.0,
            313.0,
            320.0,
            322.0,
            329.0,
            334.0,
            337.0,
            340.0,
            350.0,
            352.0,
            358.0,
            367.0,
            383.0,
            384.0,
            386.0,
            400.0,
            406.0,
            416.0,
            423.0,
            432.0,
            435.0,
            443.0,
            444.0,
            446.0,
            452.0,
            454.0,
            460.0,
            461.0,
            475.0,
            484.0,
            488.0,
            497.0,
            498.0,
            520.0,
            544.0,
            568.0,
            569.0,
            578.0,
            588.0,
            594.0,
            599.0,
            611.0,
            623.0,
            655.0,
            681.0,
            765.0,
            881.0,
            931.0,
            932.0,
            1153.0,
            1666.0,
            1674.0,
            2302.0,
            2307.0,
            2321.0,
            2342.0,
            2375.0,
            2531.0,
            2947.0
        ]
    }
    let x = data["x"]
    let y = data["y"]
    let result = []
    for (let i = 0; i < x.length; i++) {
        result.push({x: x[i], y: y[i]})
    }
    return result
}
const formChartDataFromResponse2 = (data) => {
    data = {
        "y": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.9925925925925921,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9851851851851849,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9754308764209754,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9620688096206882,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909,
            0.9424347522814909
        ],
        "x": [
            -152.0,
            64.0,
            104.0,
            120.0,
            134.0,
            143.0,
            145.0,
            154.0,
            164.0,
            186.0,
            190.0,
            197.0,
            202.0,
            203.0,
            204.0,
            213.0,
            216.0,
            218.0,
            221.0,
            222.0,
            226.0,
            232.0,
            238.0,
            240.0,
            241.0,
            244.0,
            245.0,
            246.0,
            252.0,
            258.0,
            261.0,
            262.0,
            263.0,
            264.0,
            265.0,
            271.0,
            278.0,
            281.0,
            282.0,
            287.0,
            289.0,
            290.0,
            293.0,
            297.0,
            307.0,
            308.0,
            309.0,
            313.0,
            315.0,
            320.0,
            322.0,
            323.0,
            329.0,
            334.0,
            337.0,
            340.0,
            350.0,
            352.0,
            357.0,
            358.0,
            360.0,
            361.0,
            363.0,
            367.0,
            373.0,
            383.0,
            384.0,
            386.0,
            392.0,
            394.0,
            400.0,
            403.0,
            406.0,
            416.0,
            423.0,
            432.0,
            434.0,
            435.0,
            439.0,
            443.0,
            444.0,
            446.0,
            452.0,
            460.0,
            461.0,
            475.0,
            482.0,
            497.0,
            498.0,
            520.0,
            522.0,
            544.0,
            568.0,
            569.0,
            578.0,
            588.0,
            594.0,
            599.0,
            611.0,
            623.0,
            644.0,
            655.0,
            681.0,
            718.0,
            765.0,
            881.0,
            931.0,
            932.0,
            1011.0,
            1153.0,
            1363.0,
            1402.0,
            1471.0,
            1666.0,
            1674.0,
            1693.0,
            1854.0,
            2058.0,
            2302.0,
            2307.0,
            2321.0,
            2342.0,
            2375.0,
            2531.0,
            2947.0
        ]
    }
    let x = data["x"]
    let y = data["y"]
    let result = []
    for (let i = 0; i < x.length; i++) {
        result.push({x: x[i], y: y[i]})
    }
    return result
}

export function KaplanAnalisys() {

    const [chartData, setChartData] = useState([]);
    const classes = useStyles();
    const [filters, setFilters] = useState({
        "filters": [
            {"name": "hsct_type", "value": 1},
            {"name": "hsct_processing", "value": 1}
        ]
    });

    const [arr, setArray] = useState([1]);

    const makeGraph = () => {
        axios.post(`http://127.0.0.1:8000/KM`, filters)
            .then(res => {
                setChartData(formChartDataFromResponse(res.data))
            })
    }
    return (
        <Container maxWidth={'lg'}>
            <Paper elevation={10}>
                <Container style={{
                    // backgroundColor: "green",
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-around",
                    alignItems: "center",
                    padding: "20px"
                }}>
                    <Typography variant="h4" className={classes.title}>
                        Анализ Каплана Майера
                    </Typography>
                    <Button
                    id="basic-button"
                    color={"success"}
                    variant="contained"
                    aria-haspopup="true"
                    style ={{marginRight:'8px'}}
                >
                    Экспорт
                </Button>
                    <Button variant="contained" color="primary" style={{marginRight: '8px'}}
                            onClick={makeGraph}>Рассчитать</Button>
                    <Button variant="contained" color="secondary" onClick={()=> {
                        setArray([1,2])
                    }} >Добавить фильтр</Button>
                </Container>
                {arr.map(el=><FieldFilter filters={filters} setFilters={setFilters}/>)}

                <br/>
                <ChartSection data={chartData}/>
                <br/>
                <br/>
            </Paper>
        </Container>
    );
}
export function KaplanAnalisys2() {

    const [chartData, setChartData] = useState([]);
    const classes = useStyles();
    const [filters, setFilters] = useState({
        "filters": [
            {"name": "hsct_type", "value": 1},
            {"name": "hsct_processing", "value": 1}
        ]
    });

    const [arr, setArray] = useState([1]);

    const makeGraph = () => {
        axios.post(`http://127.0.0.1:8000/KM`, filters)
            .then(res => {
                setChartData(formChartDataFromResponse2(res.data))
            })
    }
    return (
        <Container maxWidth={'lg'}>
            <Paper elevation={10}>
                <Container style={{
                    // backgroundColor: "green",
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-around",
                    alignItems: "center",
                    padding: "20px"
                }}>
                    <Typography variant="h4" className={classes.title}>
                        Анализ Каплана Майера
                    </Typography>
                    <Button
                    id="basic-button"
                    color={"success"}
                    variant="contained"
                    aria-haspopup="true"
                    style ={{marginRight:'8px'}}
                >
                    Экспорт
                </Button>
                    <Button variant="contained" color="primary" style={{marginRight: '8px'}}
                            onClick={makeGraph}>Рассчитать</Button>
                    <Button variant="contained" color="secondary" onClick={()=> {
                        setArray([1,2])
                    }} >Добавить фильтр</Button>
                </Container>
                {arr.map(el=><FieldFilter filters={filters} setFilters={setFilters}/>)}
                <br/>
                <ChartSection data={chartData}/>
                <br/>
                <br/>
            </Paper>
        </Container>
    );
}

